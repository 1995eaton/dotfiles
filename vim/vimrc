execute pathogen#infect()

" Color schemes

set t_Co=256
" set background=dark
let g:rehash256=1
colorscheme molokai
" colorscheme solarized

" Lightline

set laststatus=2
let g:lightline = { 'colorscheme': 'wombat' }
" let g:lightline = { 'colorscheme': 'solarized_dark' }

" Indentation

function! AlignAll()
  let curline = line(".")
  execute 'normal gg=G'
  execute 'normal ' + curline + 'gg'
endfunction
map <C-l> :call AlignAll()<CR>

" File settings

filetype plugin indent on
set fileformats=unix,dos,mac

" Syntax hightlighting

syntax on
map <silent> <C-h> :nohlsearch<CR>

" Line numbering

" set relativenumber
set number

" Cursor movement

set mouse=nicr
nnoremap j gj
nnoremap k gk
nnoremap 0 g^
nnoremap $ g$
map J jzz
map K kzz
map L zz

" Disable line breaks unless the <Enter> key is hit

set wrap
set linebreak
set nolist
set textwidth=0
set wrapmargin=0

" Normal backspace behavior (non-Vi)

set backspace=2

" Tab settings

set smarttab
set tabstop=2
set shiftwidth=2
set expandtab

" Searching

set incsearch
set hlsearch
set ignorecase
set smartcase
set magic

" Copy/Paste to/from X buffer

vnoremap gy "+y
nnoremap Y :%y+"<cr>
nmap gp "+p
vmap gp "+p

" Reload vimrc

nmap <silent> <leader>r :so ~/.vimrc<cr>

" Vim comments

" imap <C-_> <Esc>gcci
nmap ge gcc
vmap ge gc

" Bracket highlighting

set showmatch
set matchtime=2

" Disable file backups + swapfile creation

set noswapfile
set nobackup
set nowb

" Command mode settings

set wildmenu
set wildmode=list:longest
set shellslash
set history=100

" Vim notes

let g:notes_directories=['~/notes']

" Emmet

let g:user_emmet_leader_key='<C-n>'

" GUI options

if has('gui_running')
  set guifont=Bitstream\ Vera\ Sans\ Mono\ 9
  autocmd GUIEnter * set vb t_vb=
  autocmd VimEnter * set vb t_vb=
  set guioptions-=T
  set guioptions-=e
  set guioptions-=r
  set guioptions-=m
endif

" Windows

function! MapAll(key, mapping)
  execute 'imap' a:key "<C-o>" . a:mapping
  execute 'map' a:key a:mapping
endfunction

" call MapAll("<C-j>", "<C-w>j")
" call MapAll("<C-k>", "<C-w>k")
" call MapAll("<C-h>", "<C-w>h")
" call MapAll("<C-l>", "<C-w>l")

" nmap <silent> [ :vertical res -3<CR>
" nmap <silent> ] :vertical res +3<CR>
" nmap <silent> { :res -3<CR>
" nmap <silent> } :res +3<CR>

"  Miscellaneous
vnoremap . :normal .<CR>
set visualbell t_vb=
set ttimeoutlen=0
set timeoutlen=500
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 0
set pumheight=8
let g:airline_theme='molokai'
let g:airline_left_sep=''
let g:airline_right_sep=''

" function Move()
"   if !pumvisible() && col('.') - 2 >= 0
"     if v:char =~# "\/" || getline('.')[col('.') - 2] == "/"
"       call feedkeys("\<C-x>\<C-f>\<C-p>")
"     elseif v:char =~# "[a-zA-Z.]"
"       call feedkeys("\<C-x>\<C-o>\<C-p>")
"     endif
"   endif
" endfunction
" autocmd InsertCharPre * call Move()

vnoremap <C-e> <C-u>
nnoremap <C-e> <C-u>
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
call MapAll("<C-f>", ":source $MYVIMRC<CR>")
set ttyfast
hi SpellCap term=reverse ctermbg=160
let g:syntastic_javascript_jshint_conf='/home/jake/source/chromium-vim/.jshintrc'
set lazyredraw

map <C-B> k

" Insert Mode Movement

" imap <C-h> <Esc>bi
" imap <C-l> <Esc>lwi
" imap <C-k> <Esc>lki
" imap <C-j> <Esc>lji
" imap <C-i> <Esc>I
" imap <C-e> <Esc>A
" imap <C-d> <Esc>ddi
" nmap <C-e> A
" nmap <C-i> I
