#!/usr/bin/env python3

# Calculates the weighted average (by volume) of Bitcoin in USD
# Sources are Mt Gox, Bitstamp, BTC-E, and LocalBitcoins
# Created to emulate <http://preev.com/btc/usd/>'s data

from urllib import request
from json import loads

mtgox = loads(request.urlopen("http://data.mtgox.com/api/2/BTCUSD/money/ticker").read().decode('utf8'))
mtgox_value = float(mtgox['data']['last_local']['value'])
mtgox_vol = float(mtgox['data']['vol']['value'])
print("Mt Gox:       ", round(mtgox_value), "USD -- volume:", mtgox_vol)

bitstamp = loads(request.urlopen("https://www.bitstamp.net/api/ticker").read().decode('utf8'))
bitstamp_value = float(bitstamp['last'])
bitstamp_vol = float(bitstamp['volume'])
print("Bitstamp:     ", round(bitstamp_value), "USD -- volume:", bitstamp_vol)

btc_e = loads(request.urlopen("https://btc-e.com/api/2/btc_usd/ticker").read().decode('utf8'))
btc_e_value = float(btc_e['ticker']['last'])
btc_e_vol = float(btc_e['ticker']['vol_cur'])
print("BTC-E:        ", round(btc_e_value), "USD -- volume:", btc_e_vol)

localbitcoins = loads(request.urlopen("https://localbitcoins.com/bitcoinaverage/ticker-all-currencies").read().decode('utf8'))
localbitcoins_value = float(localbitcoins['USD']['avg_1h']) #['USD']['avg_1h']
localbitcoins_vol = float(localbitcoins['USD']['volume_btc'])
print("Localbitcoins:", round(localbitcoins_value), "USD -- volume:", localbitcoins_vol)

vol_total = mtgox_vol + bitstamp_vol + btc_e_vol + localbitcoins_vol
BTC_avg = mtgox_value*mtgox_vol/vol_total+bitstamp_value*bitstamp_vol/ \
        vol_total+btc_e_value*btc_e_vol/vol_total+localbitcoins_value* \
        localbitcoins_vol/vol_total

print("\n1 BTC currently equals about", BTC_avg, "USD")
