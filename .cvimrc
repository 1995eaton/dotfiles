let homedirectory = '/home/jake'
let configpath = '~/.cvimrc'
set localconfig
set nosmoothscroll
set noautofocus
set cncpcompletion
set nohud
set nodimhintcharacters
set typelinkhints
let zoomfactor = 0.05
let scrollduration = 350
let searchlimit = 25
let completionengines = ['google', 'wikipedia', 'imdb',
      \ 'amazon', 'wolframalpha', 'duckduckgo', 'juce', 'dogpile']
let qmark a = [ 'http://www.reddit.com/r/learnjavascript/new',
      \ 'http://www.reddit.com/r/learnpython/new/',
      \ 'http://www.reddit.com/r/learnprogramming/new']
let vimcommand = 'urxvt -e vim'
imap <C-o> editWithVim
map af createActiveTabbedHint
map $ lastTab
map 0 firstTab
map <Space> l
map <S-Space> h
map <C-Space> :source ~/.cvimrc<CR>
map gS :viewsource&<CR>
map xx closeTab
map qq xx
map \ :source<CR>
map gs fullImageHint
map Q createHoverHint
map gq :restore<Space>
map a<Space> z<Enter>
map <C-e> z<Enter>
map <C-k> nextTab
map <C-j> previousTab
map cn :execute nzz<CR>
map cN :execute Nzz<CR>
map <C-d> :file ~/
map mm ;m
map <C-s> openLastHint
map <C-g> :set smoothscroll!<CR>
map <C-h> :nohl<CR>
map cc :set hud!<CR>
map aa :tabopen g<Space>
map g, :set numerichints!<CR>
map ga :settings<CR>
map g0 scrollToLeft
map I yankHighlight
map g$ scrollToRight
site '*://*/*' {
  call :script [].slice.call(document.querySelectorAll('*[accesskey]')).forEach(function(e){e.removeAttribute('accesskey')});
}
site '*://gist.github.com/*' {
  let nextmatchpattern = 'Older'
  let previousmatchpattern = 'Newer'
}
imap <C-y> selectAll
imap <C-a> <C-i>
imap <C-l> forwardWord
imap <C-h> backwardWord
map <BS> <Nop>
map , passKeys
getIP() -> {{
httpRequest({url: 'http://www.telize.com/geoip', json: true},
            function(res) { Status.setMessage(res.ip + ' - ' + res.isp); });
}}
site '*://*.netflix.com/WiPlayer*' {
  unmap <Space>
  unmap f
}
map ci :call getIP<CR>
let blacklists = ["file:///home/jake/typing-test/index.html","file:///home/jake/wip/pong/index.html","file:///home/jake/GameBoy-Online/*"]

big() -> {{

[].forEach.call(document.links, function(e) {
  if (e.textContent === 'Big') {
    var img = document.createElement('img');
    img.onload = function() {
      document.body.appendChild(img);
    };
    img.style.display = 'block';
    img.style.maxWidth = '100%';
    img.style.height = 'auto'
    img.src = e.href;
  }
});

}}

map <C-b> :call big<CR>
