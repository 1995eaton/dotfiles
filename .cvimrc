let homedirectory = '/home/jake'
let configpath = '~/.cvimrc'
set localconfig

let vimcommand = 'urxvt -e vim'
" imap <C-o> editWithVim

" set sortlinkhints
set nosmoothscroll
set noautofocus
set cncpcompletion
set nohud
set nodimhintcharacters
set typelinkhints
let mapleader = ','
let zoomfactor = 0.05
let scrollduration = 250
let searchlimit = 25
let completionengines = ['google', 'wikipedia', 'imdb',
      \ 'amazon', 'wolframalpha', 'duckduckgo']
let searchalias w = 'wikipedia'
" let completionengines = ['google', 'wikipedia', 'youtube', 'imdb', 'amazon',
"       \ 'google-maps', 'wolframalpha', 'google-image', 'ebay',
"       \ 'webster', 'wiktionary', 'urbandictionary', 'duckduckgo',
"       \ 'answers', 'google-trends', 'google-finance', 'yahoo',
"       \ 'bing', 'themoviedb']
let qmark a = [ 'http://www.reddit.com/r/learnjavascript/new',
      \ 'http://www.reddit.com/r/learnpython/new/',
      \ 'http://www.reddit.com/r/learnprogramming/new']
let searchalias i = 'imdb'

map af createActiveTabbedHint
map $ lastTab
map 0 firstTab
map <Space> l
map <S-Space> h
map gS :viewsource&<CR>
map xx closeTab
map ,d :du<CR>
map qq xx
map Q closeTab
map gs fullImageHint
map gq :restore<Space>
map a<Space> z<Enter>
map <C-e> z<Enter>
map <C-k> nextTab
map <C-j> previousTab
map cn :execute nzz<CR>
map cN :execute Nzz<CR>
map <C-d> :file ~/
map m* setMark
map <C-s> openLastHint
map <C-g> :set smoothscroll!<CR>
map cc :set hud!<CR>
map aa :tabopen g<Space>
map ga :settings<CR>
map g0 scrollToLeft
map I yankHighlight
map g$ scrollToRight
imap <C-y> selectAll
imap <C-a> <C-i>
imap <C-l> forwardWord
imap <C-h> backwardWord
map <BS> <Nop>
map <Leader>s :source<CR>
map cf nextMatchPattern
map cd previousMatchPattern
map <Leader>n :set numerichints!<CR>
map ci :call getIP<CR>
map ? openLinkSearchBar
map <C-h> clearSearchHighlight

fixChromiumWikiBug -> {{
  [].slice.call(document.querySelectorAll('*[accesskey]')).forEach(function(e) {
    e.removeAttribute('accesskey');
  });
}}
site '*://*/*' {
  call fixChromiumWikiBug
}

getIP -> {{
  httpRequest({url: 'http://www.telize.com/geoip', json: true}, function(res) {
    Status.setMessage(res.ip + ' - ' + res.isp);
  });
}}

site '*://*.netflix.com/watch*' {
  unmap <Space> f
}

tabnextVimStyle(n) -> {{
    if (~~n <= 0 && Mappings.lastCommand.repeatStr === '')
        RUNTIME('nextTab', {repeats: 1});
    else
        RUNTIME('goToTab', {index: (n || Mappings.lastCommand.repeats) - 1});
}}
map gt :call tabnextVimStyle<CR>

incognitoHint(link) -> {{
    RUNTIME('openLinkWindow', {url: link.href, incognito: true});
}}
map <C-i> createScriptHint(incognitoHint)
let blacklists = ['file:///home/jake/html5-sudoku/*', 'http://jake-eaton.com/sudoku/']

map V :source ~/.cvimrc<CR>
